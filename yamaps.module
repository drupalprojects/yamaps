<?php

/**
 * @file
 * Yandex.Maps module main file.
 */

/**
 * Includes.
 */
module_load_include('inc', 'yamaps', 'inc/yamaps.formatter');
module_load_include('inc', 'yamaps', 'inc/yamaps.widget');
module_load_include('inc', 'yamaps', 'inc/yamaps.block');

/**
 * Implements hook_field_info().
 */
function yamaps_field_info() {
  return array(
    'field_yamaps' => array(
      'label' => t('Yandex map'),
      'default_widget' => 'yamaps_field',
      'default_formatter' => 'field_yamaps_formatter_dynamic',
    ),
  );
}

/**
 * Implements hook_field_is_empty().
 */
function yamaps_field_is_empty($item, $field) {
  return empty($item['coords']);
}

/**
 * Implements hook_element_info().
 */
function yamaps_element_info() {
  $elements = array();
  $elements['yamaps_field'] = array(
    '#input' => TRUE,
    '#theme_wrappers' => array('form_element'),
  );
  return $elements;
}

/**
 * Implements hook_library().
 */
function yamaps_library() {
  // Users language.
  global $language;
  // Module path.
  $path = drupal_get_path('module', 'yamaps') . '/misc/';
  // Weight counter.
  $w = 10;
  // API url.
  $api_url = 'http://api-maps.yandex.ru/2.0/?load=package.full&lang=ru-RU&wizard=Drupal_yamaps_' . $language->language;

  $libraries['yamaps.full'] = array(
    'title' => 'Yandex maps. Edit mode.',
    'version' => '2.x',
    'js' => array(
      $api_url => array(
        'type' => 'external',
        'scope' => 'footer',
        'weight' => $w++,
      ),
      $path . 'yamaps.init.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.layouts.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.placemark.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.line.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.polygon.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.route.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.map.js' => array('scope' => 'footer', 'weight' => $w++),
      $path . 'yamaps.run.js' => array('scope' => 'footer', 'weight' => $w++),
    ),
    'css' => array(
      $path . 'yamaps.css' => array(),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_help().
 */
function yamaps_help($path, $arg) {
  switch ($path) {
    case 'admin/help#yamaps':
      // Return a line-break version of the module README.txt
      return _filter_autop(file_get_contents(dirname(__FILE__) . "/README.txt"));
      break;
  }
}

/**
 * Validate pixels or percentage value.
 */
function yamaps_field_validate_pixels_percentage($element, &$form_state) {
  $value = $element['#value'];
  if (!preg_match('/^[1-9]{1}[0-9]*(px|%)$/', $value)) {
    form_error($element, t('%name must be a positive integer or percentage value.', array('%name' => $element['#title'])));
  }
}
